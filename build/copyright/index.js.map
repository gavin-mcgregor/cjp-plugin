{"version":3,"file":"copyright/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AAC2E;AACG;;AAE9E;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASM,IAAIA,CAAC;EAAEC,UAAU;EAAEC;AAAc,CAAC,EAAE;EAC3D,MAAM;IAAEC,gBAAgB;IAAEC;EAAa,CAAC,GAAGH,UAAU;EACrD,MAAMI,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;EAEvD,IAAIC,WAAW;EAEf,IAAIN,gBAAgB,IAAIC,YAAY,EAAE;IACrCK,WAAW,GAAGL,YAAY,GAAG,GAAG,GAAGC,WAAW;EAC/C,CAAC,MAAM;IACNI,WAAW,GAAGJ,WAAW;EAC1B;EAEA,OACCK,oDAAA,CAAAC,2CAAA,QACCD,oDAAA,CAACf,sEAAiB,QACjBe,oDAAA,CAACb,4DAAS;IAACe,KAAK,EAAElB,mDAAE,CAAC,UAAU,EAAE,sBAAsB;EAAE,GACxDgB,oDAAA,CAACX,gEAAa;IACbc,OAAO,EAAE,CAAC,CAACV,gBAAiB;IAC5BW,KAAK,EAAEpB,mDAAE,CAAC,oBAAoB,EAAE,sBAAsB,CAAE;IACxDqB,QAAQ,EAAEA,CAAA,KACTb,aAAa,CAAC;MACbC,gBAAgB,EAAE,CAACA;IACpB,CAAC;EACD,CACD,CAAC,EACDA,gBAAgB,IAChBO,oDAAA,CAACZ,8DAAW;IACXgB,KAAK,EAAEpB,mDAAE,CAAC,eAAe,EAAE,sBAAsB,CAAE;IACnDsB,KAAK,EAAEZ,YAAY,IAAI,EAAG;IAC1BW,QAAQ,EAAGC,KAAK,IAAKd,aAAa,CAAC;MAAEE,YAAY,EAAEY;IAAM,CAAC;EAAE,CAC5D,CAEQ,CACO,CAAC,EACpBN,oDAAA;IAAA,GAAOd,sEAAa,CAAC;EAAC,GAAE,OAAE,EAACa,WAAe,CACzC,CAAC;AAEL;;;;;;;;;;ACtEA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AAC0B;AACU;;AAEpC;AACA;AACA;AACA,MAAMU,YAAY,GACjBT,oDAAA;EACCU,OAAO,EAAC,WAAW;EACnBC,KAAK,EAAC,4BAA4B;EAClC,eAAY,MAAM;EAClBC,SAAS,EAAC;AAAO,GAEjBZ,oDAAA;EAAMa,CAAC,EAAC;AAA0N,CAAO,CACrO,CACL;;AAED;AACA;AACA;AACA;AACA;AACAN,oEAAiB,CAACC,6CAAa,EAAE;EAChC;AACD;AACA;EACCO,IAAI,EAAEN,YAAY;EAClBO,IAAI,EAAE1B,6CAAIA;AACX,CAAC,CAAC,C","sources":["webpack://cjp-blocks/./src/copyright/edit.js","webpack://cjp-blocks/external window \"React\"","webpack://cjp-blocks/external window [\"wp\",\"blockEditor\"]","webpack://cjp-blocks/external window [\"wp\",\"blocks\"]","webpack://cjp-blocks/external window [\"wp\",\"components\"]","webpack://cjp-blocks/external window [\"wp\",\"i18n\"]","webpack://cjp-blocks/webpack/bootstrap","webpack://cjp-blocks/webpack/runtime/compat get default export","webpack://cjp-blocks/webpack/runtime/define property getters","webpack://cjp-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://cjp-blocks/webpack/runtime/make namespace object","webpack://cjp-blocks/./src/copyright/index.js"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { InspectorControls, useBlockProps } from \"@wordpress/block-editor\";\nimport { PanelBody, TextControl, ToggleControl } from \"@wordpress/components\";\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\n\n// import \"./editor.scss\";\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit\n *\n * @return {Element} Element to render.\n */\nexport default function Edit({ attributes, setAttributes }) {\n\tconst { showStartingYear, startingYear } = attributes;\n\tconst currentYear = new Date().getFullYear().toString();\n\n\tlet displayDate;\n\n\tif (showStartingYear && startingYear) {\n\t\tdisplayDate = startingYear + \"–\" + currentYear;\n\t} else {\n\t\tdisplayDate = currentYear;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={__(\"Settings\", \"copyright-date-block\")}>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tchecked={!!showStartingYear}\n\t\t\t\t\t\tlabel={__(\"Show starting year\", \"copyright-date-block\")}\n\t\t\t\t\t\tonChange={() =>\n\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\tshowStartingYear: !showStartingYear,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t{showStartingYear && (\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={__(\"Starting year\", \"copyright-date-block\")}\n\t\t\t\t\t\t\tvalue={startingYear || \"\"}\n\t\t\t\t\t\t\tonChange={(value) => setAttributes({ startingYear: value })}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<p {...useBlockProps()}>© {displayDate}</p>\n\t\t</>\n\t);\n}\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from \"@wordpress/blocks\";\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\n\n// import \"./style.scss\";\n\n/**\n * Internal dependencies\n */\nimport Edit from \"./edit\";\nimport metadata from \"./block.json\";\n\n/**\n * Block icon\n */\nconst calendarIcon = (\n\t<svg\n\t\tviewBox=\"0 0 24 24\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\taria-hidden=\"true\"\n\t\tfocusable=\"false\"\n\t>\n\t\t<path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm.5 16c0 .3-.2.5-.5.5H5c-.3 0-.5-.2-.5-.5V7h15v12zM9 10H7v2h2v-2zm0 4H7v2h2v-2zm4-4h-2v2h2v-2zm4 0h-2v2h2v-2zm-4 4h-2v2h2v-2zm4 0h-2v2h2v-2z\"></path>\n\t</svg>\n);\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType(metadata.name, {\n\t/**\n\t * @see ./edit.js\n\t */\n\ticon: calendarIcon,\n\tedit: Edit,\n});\n"],"names":["__","InspectorControls","useBlockProps","PanelBody","TextControl","ToggleControl","Edit","attributes","setAttributes","showStartingYear","startingYear","currentYear","Date","getFullYear","toString","displayDate","createElement","Fragment","title","checked","label","onChange","value","registerBlockType","metadata","calendarIcon","viewBox","xmlns","focusable","d","name","icon","edit"],"sourceRoot":""}